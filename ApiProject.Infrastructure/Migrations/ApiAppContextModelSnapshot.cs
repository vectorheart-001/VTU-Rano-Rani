// <auto-generated />
using System;
using ApiProject.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiProject.Infrastructure.Migrations
{
    [DbContext(typeof(ApiAppContext))]
    partial class ApiAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiProject.Domain.Entities.Major", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlacesLeft")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Majors");

                    b.HasData(
                        new
                        {
                            Id = "000",
                            Name = "None",
                            PaymentType = "None",
                            PlacesLeft = 0,
                            Type = "None"
                        },
                        new
                        {
                            Id = "004",
                            Name = "Археология",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 3,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "044",
                            Name = "Балканистика",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 5,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "018",
                            Name = "Българска филология",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 2,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "005",
                            Name = "География",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 4,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "045",
                            Name = "Германистика",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "703",
                            Name = "Дипломация и международни отношения",
                            PaymentType = "Платено обучение",
                            PlacesLeft = 7,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "702",
                            Name = "Дипломация и международни отношения",
                            PaymentType = "Платено обучение",
                            PlacesLeft = 7,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "007",
                            Name = "Етнология",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 4,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "698",
                            Name = "Журналистика",
                            PaymentType = "Платено обучение",
                            PlacesLeft = 2,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "074",
                            Name = "Изящни изкуства – живопис",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "075",
                            Name = "Изящни изкуства – рисуване и интермедия",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "077",
                            Name = "Изящни изкуства – стенопис",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "057",
                            Name = "Информационно брокерство и дигитални медии",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "003",
                            Name = "История",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 2,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "203",
                            Name = "История",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 7603,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "059",
                            Name = "Компютърни науки",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 11,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "008",
                            Name = "Културен туризъм",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 3,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "653",
                            Name = "Международни икономически отношения",
                            PaymentType = "Платено обучение",
                            PlacesLeft = 13,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "066",
                            Name = "Начална училищна педагогика и специална педагогика (Велико Търново)",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Задочно"
                        },
                        new
                        {
                            Id = "015",
                            Name = "Педагогика на обучението по български език и география",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Редовно"
                        },
                        new
                        {
                            Id = "215",
                            Name = "Педагогика на обучението по български език и география",
                            PaymentType = "Държавна поръчка",
                            PlacesLeft = 1,
                            Type = "Задочно"
                        });
                });

            modelBuilder.Entity("ApiProject.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("ApiProject.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MajorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PeronalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MajorId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ApiProject.Domain.Entities.User", b =>
                {
                    b.HasOne("ApiProject.Domain.Entities.Major", "Major")
                        .WithMany("Students")
                        .HasForeignKey("MajorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Major");
                });

            modelBuilder.Entity("ApiProject.Domain.Entities.Major", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
